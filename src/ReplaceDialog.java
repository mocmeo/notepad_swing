
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.Highlighter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author mocmeo
 */
public class ReplaceDialog extends javax.swing.JFrame {

    MainWindow window;
    protected JTextArea textArea;
    protected Highlighter highlighter;
    protected Highlighter.HighlightPainter painter;
    private Color entryBg;
    private String ret_keyword;

    private int findPosn = 0;
    private boolean isReplace = false;
    private boolean isStopReplacing = true;
    private int replaceIndex =-1;
    private int replaceEnd = -1;

    public ReplaceDialog(MainWindow win) {
        initComponents();

        this.window = win;
        textArea = window.getTextArea();
        highlighter = window.getHighlighter();
        painter = window.getPainter();

        entryBg = keywordField.getBackground();

        // dispose the frame instead of exiting
        // without this, application will be terminated
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        findNextButton.setEnabled(false);
        replaceButton.setEnabled(false);
        replaceallButton.setEnabled(false);
        this.setTitle("Replace");

    }

    public ReplaceDialog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keywordLabel = new javax.swing.JLabel();
        replaceLabel = new javax.swing.JLabel();
        keywordField = new javax.swing.JTextField();
        findNextButton = new javax.swing.JButton();
        replaceField = new javax.swing.JTextField();
        replaceButton = new javax.swing.JButton();
        replaceallButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        matchCaseBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        keywordLabel.setText("Find what:");

        replaceLabel.setText("Replace with:");

        keywordField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                keywordFieldCaretUpdate(evt);
            }
        });
        keywordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keywordFieldActionPerformed(evt);
            }
        });

        findNextButton.setText("Find Next");
        findNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findNextButtonActionPerformed(evt);
            }
        });

        replaceButton.setText("Replace");
        replaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceButtonActionPerformed(evt);
            }
        });

        replaceallButton.setText("Replace all");
        replaceallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceallButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        matchCaseBox.setText("Match case");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keywordLabel)
                            .addComponent(replaceLabel))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(keywordField, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(replaceField))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(findNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(replaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(matchCaseBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(replaceallButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keywordLabel)
                    .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findNextButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(replaceLabel)
                    .addComponent(replaceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(replaceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(replaceallButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(matchCaseBox))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        highlighter.removeAllHighlights();
        keywordField.setText("");
        window.setHighlightTag(null);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void findNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findNextButtonActionPerformed
        findPosn = textArea.getCaretPosition();
        highlighter.removeAllHighlights();

        String keyword = keywordField.getText();
        if (keyword.isEmpty()) {
            return;
        }

        String content = textArea.getText();
        int index = content.indexOf(keyword, findPosn);
        if (matchCaseBox.isSelected()) {
            index = content.toLowerCase().indexOf(keyword.toLowerCase(), findPosn);
        }

        if (index >= 0) {   // match found
            try {
                int end = index + keyword.length();
                findPosn = end;
                window.setHighlightTag(highlighter.addHighlight(index, end, painter));
                textArea.setCaretPosition(end);

                replaceIndex = index;
                replaceEnd = end;
                keywordField.setBackground(entryBg);
            } catch (BadLocationException e) {
            }
        } else {
            window.setHighlightTag(null);
            keywordField.setBackground(Color.LIGHT_GRAY);
            JOptionPane.showMessageDialog(this, "Cannot find \"" + keyword + "\"",
                    "Notepad", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_findNextButtonActionPerformed

    private void replaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceButtonActionPerformed
        if (replaceIndex != -1 && replaceEnd != -1 && (!replaceField.getText().isEmpty())) {
            textArea.replaceRange(replaceField.getText(), replaceIndex, replaceEnd);
            replaceIndex = -1;
            replaceEnd = -1;
        } else {
            isStopReplacing = true;
        }
    }//GEN-LAST:event_replaceButtonActionPerformed

    private void replaceallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceallButtonActionPerformed
        if (keywordField.getText().isEmpty()) {
            replaceallButton.setEnabled(false);
            return;
        }
        isStopReplacing = false;
        textArea.setCaretPosition(0);
        while (!isStopReplacing) {
            findNextButtonActionPerformed(evt);
            replaceButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_replaceallButtonActionPerformed

    private void keywordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keywordFieldActionPerformed
        findNextButtonActionPerformed(evt);
    }//GEN-LAST:event_keywordFieldActionPerformed

    private void keywordFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_keywordFieldCaretUpdate
        if (keywordField.getText().isEmpty()) {
            findNextButton.setEnabled(false);
            replaceButton.setEnabled(false);
            replaceallButton.setEnabled(false);
        } else {
            findNextButton.setEnabled(true);
            replaceButton.setEnabled(true);
            replaceallButton.setEnabled(true);
        }
    }//GEN-LAST:event_keywordFieldCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReplaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReplaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReplaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReplaceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReplaceDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton findNextButton;
    private javax.swing.JTextField keywordField;
    private javax.swing.JLabel keywordLabel;
    private javax.swing.JCheckBox matchCaseBox;
    private javax.swing.JButton replaceButton;
    private javax.swing.JTextField replaceField;
    private javax.swing.JLabel replaceLabel;
    private javax.swing.JButton replaceallButton;
    // End of variables declaration//GEN-END:variables
}
